{"version":3,"sources":["Context.js","components/Header/Header.js","components/hooks/useHover.js","components/Image/Image.js","components/QueryInput/QueryInput.js","pages/Photos.js","utils/index.js","components/CartItem/CartItem.js","pages/Cart.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","imageQuery","setImageQuery","nullQuery","setNullQuery","error","setError","useEffect","url","process","a","fetch","photosPromise","json","photos","message","getPhotos","SearchImage","e","preventDefault","queryUrl","response","queryPhotos","results","length","Provider","value","toggleFavorite","id","newArr","map","photo","liked_by_user","addToCart","prevItems","removeFromCart","filter","item","Header","cartIcon","useContext","to","className","useHover","hovered","setHovered","ref","useRef","cleanUp","current","addEventListener","enter","leave","removeEventListener","Image","src","urls","thumb","alt","alt_description","onClick","find","QueryInput","onSubmit","type","placeholder","onChange","target","Photos","imageElements","index","i","CartItem","deleteIconClassName","Cart","placeOrder","setPlaceOrder","cartItem","totalCostDisplay","toLocaleString","style","currency","setTimeout","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae5f3c1c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const [allPhotos, setAllPhotos] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [imageQuery, setImageQuery] = useState(\"\");\r\n  const [nullQuery, setNullQuery] = useState(\"\");\r\n  const [error, setError] = useState(\"\")\r\n \r\n\r\n  useEffect(() => {\r\n    //get images from API upon rendering \r\n    const url = `https://api.unsplash.com/photos?page=1&per_page=26&client_id=${process.env.REACT_APP_UNSPLASH_KEY}`;\r\n\r\n    async function getPhotos() {\r\n      try {\r\n        const photosPromise = await fetch(url);\r\n        const photos = await photosPromise.json();\r\n        setAllPhotos(photos);\r\n      } catch(error){\r\n        setError(error.message + \" images\")\r\n      }\r\n    }\r\n    getPhotos();\r\n  }, []);\r\n\r\n  //search query\r\n  const SearchImage = async (e) => {\r\n    e.preventDefault();\r\n    setImageQuery(\"\");\r\n    const queryUrl = `https://api.unsplash.com/search/photos?page=1&per_page=26&query=${imageQuery}&client_id=${process.env.REACT_APP_UNSPLASH_KEY}`;\r\n    const response = await fetch(queryUrl);\r\n    const queryPhotos = await response.json();\r\n\r\n    //if search cant be found display message to user.\r\n    if (queryPhotos.results.length === 0) {\r\n      setNullQuery(\r\n        `There are 0 results for \"${imageQuery}\", please try again.`\r\n      );\r\n      setAllPhotos([]);\r\n    } else {\r\n      setAllPhotos([...queryPhotos.results]);\r\n      setNullQuery(\"\");\r\n    }\r\n  };\r\n\r\n  //toggle favorited on and off\r\n  const toggleFavorite = (id) => {\r\n    const newArr = allPhotos.map((photo) => {\r\n      if (photo.id === id) {\r\n        return {\r\n          ...photo,\r\n          liked_by_user: !photo.liked_by_user,\r\n        };\r\n      }\r\n      return photo;\r\n    });\r\n\r\n    setAllPhotos(newArr);\r\n  };\r\n\r\n  //adding images to cart\r\n  const addToCart = (photo) => {\r\n    setCartItems((prevItems) => [...prevItems, photo]);\r\n  };\r\n\r\n\r\n  //removing image from cart\r\n  const removeFromCart = (photo) => {\r\n    setCartItems((prevItems) =>\r\n      prevItems.filter((item) => item.id !== photo.id)\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        allPhotos,\r\n        toggleFavorite,\r\n        addToCart,\r\n        cartItems,\r\n        removeFromCart,\r\n        setCartItems,\r\n        imageQuery,\r\n        setImageQuery,\r\n        SearchImage,\r\n        nullQuery,\r\n        error\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\nexport { ContextProvider, Context };\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Context } from \"../../Context\";\r\nimport \"../Header/Header.css\";\r\n\r\nfunction Header() {\r\n  const { cartItems } = useContext(Context);\r\n\r\n  //change shopping cart icon based on if items are in the cart\r\n  let cartIcon = \"\";\r\n  if (cartItems.length >= 1) {\r\n    cartIcon = \"ri-shopping-cart-fill ri-fw ri-2x cart-icon\";\r\n  } else {\r\n    cartIcon = \"ri-shopping-cart-line ri-fw ri-2x cart-icon\";\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Link to=\"/\">\r\n        <h2 className=\"header__image-shop-text\">Image Shop</h2>\r\n      </Link>\r\n      <Link to=\"/cart\">\r\n        <i className={cartIcon}></i>\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nconst useHover = () => {\r\n  const [hovered, setHovered] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const cleanUp = ref.current;\r\n\r\n    ref.current.addEventListener(\"mouseenter\", enter);\r\n    ref.current.addEventListener(\"mouseleave\", leave);\r\n\r\n    return () => {\r\n      cleanUp.removeEventListener(\"mouseenter\", enter);\r\n      cleanUp.removeEventListener(\"mouseleave\", leave);\r\n    };\r\n  }, []);\r\n\r\n  const enter = () => {\r\n    setHovered(true);\r\n  };\r\n\r\n  const leave = () => {\r\n    setHovered(false);\r\n  };\r\n\r\n  return [hovered, ref];\r\n};\r\n\r\nexport default useHover;\r\n","import React, { useContext } from \"react\";\r\nimport useHover from \"../hooks/useHover\";\r\nimport { Context } from \"../../Context\";\r\n\r\nimport \"../Image/Image.css\";\r\n\r\nconst Image = ({ className, photo }) => {\r\n  const { toggleFavorite, addToCart, cartItems, removeFromCart } =\r\n    useContext(Context);\r\n  const [hovered, ref] = useHover();\r\n\r\n  //displaying filled heart icon when clicked, or outline heart when hovered\r\n  function heartIcon() {\r\n    if (photo.liked_by_user) {\r\n      return (\r\n        <i\r\n          onClick={() => toggleFavorite(photo.id)}\r\n          className=\"ri-heart-fill favorite\"\r\n        ></i>\r\n      );\r\n    } else if(hovered)  {\r\n      return (\r\n        <i\r\n          onClick={() => toggleFavorite(photo.id)}\r\n          className=\"ri-heart-line favorite\"\r\n        ></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  //displaying shopping cart icon when clicked, or plus icon when hovered\r\n  function cartIcon() {\r\n    const alreadyInCart = cartItems.find((item) => item.id === photo.id);\r\n    if (alreadyInCart) {\r\n      return (\r\n        <i\r\n          onClick={() => removeFromCart(photo)}\r\n          className=\"ri-shopping-cart-fill cart shopping-cart-icon\"\r\n        ></i>\r\n      );\r\n    } else if(hovered)  {\r\n      return (\r\n        <i\r\n          onClick={() => addToCart(photo)}\r\n          className=\"ri-add-circle-line plus-icon\"\r\n        ></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div ref={ref} className={`${className} image-container`}>\r\n      <img\r\n        className=\"image-grid\"\r\n        src={photo.urls.thumb}\r\n        alt={photo.alt_description}\r\n      />\r\n      {heartIcon()}\r\n      {cartIcon()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../../Context\";\r\n\r\nimport \"./QueryInput.css\";\r\n\r\nconst QueryInput = () => {\r\n  const { imageQuery, setImageQuery, SearchImage } = useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"query-input-form container\" onSubmit={SearchImage}>\r\n        <label className=\"query-label\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"query-input\"\r\n            placeholder=\"Search Images\"\r\n            value={imageQuery}\r\n            onChange={(e) => setImageQuery(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QueryInput;\r\n","import React, { useContext } from \"react\";\r\nimport Image from \"../components/Image/Image\";\r\nimport { Context } from \"../Context\";\r\nimport { getClass } from \"../utils\";\r\n\r\nimport QueryInput from \"../components/QueryInput/QueryInput\";\r\nimport \"./photos.css\";\r\n\r\nfunction Photos() {\r\n  const { allPhotos, nullQuery, error } = useContext(Context);\r\n\r\n  const imageElements = allPhotos.map((photo, index) => (\r\n    <Image key={photo.id} className={getClass(index)} photo={photo} />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <QueryInput />\r\n      <main className=\"Photos\">{imageElements}</main>\r\n\r\n      <div className=\"null-query-search\">{nullQuery}</div>\r\n      <div className=\"api-error\">{error}</div>\r\n    </>\r\n  );\r\n}\r\nexport default Photos;\r\n","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide'\r\n    }\r\n}","import React, { useContext } from \"react\";\r\nimport useHover from \"../hooks/useHover\";\r\nimport { Context } from \"../../Context\";\r\nimport \"../CartItem/CartItem.css\";\r\n\r\nconst CartItem = ({ item }) => {\r\n  const { removeFromCart } = useContext(Context);\r\n  const [hovered, ref] = useHover();\r\n\r\n  //display delete icon based on if icon is hovered\r\n  const deleteIconClassName = hovered\r\n    ? \"ri-delete-bin-fill\"\r\n    : \"ri-delete-bin-line\";\r\n\r\n  return (\r\n    <div className=\"cart-item__container\">\r\n      <i\r\n        className={deleteIconClassName}\r\n        ref={ref}\r\n        onClick={() => removeFromCart(item)}\r\n      ></i>\r\n      <img src={item.urls.thumb} alt=\"Your Item\" />\r\n      <p className=\"cart-item__item-price\">$5.99</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport CartItem from \"../components/CartItem/CartItem\";\r\n\r\nimport \"./Cart.css\";\r\n\r\nconst Cart = () => {\r\n  const { cartItems, setCartItems } = useContext(Context);\r\n  const [placeOrder, setPlaceOrder] = useState(false);\r\n\r\n  //getting items from cart, display image for each item\r\n  const cartItem = cartItems.map((item) => (\r\n    <CartItem key={item.id} item={item} />\r\n  ));\r\n\r\n  //calculate total cost\r\n  const totalCost = cartItems.length * 5.99;\r\n  const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n\r\n  //placing order\r\n  function PlaceOrder() {\r\n    setPlaceOrder(true);\r\n    setTimeout(() => {\r\n      setPlaceOrder(false);\r\n      setCartItems([]);\r\n    }, 3000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"cart__title\">Cart Checkout</h2>\r\n      {cartItem}\r\n      <p className=\"cart__total-cost\">Total: {totalCostDisplay}</p>\r\n\r\n      {cartItems.length > 0 ? (\r\n        <div className=\"cart__btn-wrapper\">\r\n          <button onClick={PlaceOrder} className=\"cart__order-btn\">\r\n            {placeOrder ? \"Ordering...\" : \"place order\"}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <p className=\"cart__no-items-text\">You have no items in your cart.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\"\r\nimport Header from \"./components/Header/Header\"\r\nimport {Switch, Route} from \"react-router-dom\"\r\nimport Photos from \"./pages/Photos\"\r\nimport Cart from \"./pages/Cart\"\r\n\r\nfunction App(){\r\n\r\n\r\n\r\n  return(\r\n<div>\r\n  <Header />\r\n\r\n  <Switch>\r\n     <Route exact path=\"/\">\r\n       <Photos />\r\n     </Route>\r\n\r\n     <Route  path=\"/cart\">\r\n       <Cart />\r\n     </Route>\r\n  </Switch>\r\n\r\n</div>\r\n\r\n  )\r\n}       \r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport {HashRouter as Router} from \"react-router-dom\"\r\nimport {ContextProvider} from \"./Context\"\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <Router>\r\n        <App />\r\n        </Router>\r\n    </ContextProvider>\r\n, document.getElementById(\"root\"))"],"sourceRoot":""}